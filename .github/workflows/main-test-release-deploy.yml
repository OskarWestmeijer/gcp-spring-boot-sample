name: main-build-test-release

on:
  push:
    branches:
      - main
jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and test
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - run: |
          chmod +x mvnw 
          ./mvnw clean verify
      - uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/app.jar
          retention-days: 1

  terraform-check:
    runs-on: ubuntu-latest
    environment: oskar-westmeijer-environment
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_INFRA_SERVICE_ACCOUNT }}
      - name: Terraform Format
        run: terraform fmt -recursive -check
      - name: Terraform Validate
        run: terraform validate

  codeql-check:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      contents: read
      security-events: write

  release-docker-image:
    needs: [ build-and-test, terraform-check, codeql-check ]
    runs-on: ubuntu-latest
    environment: oskar-westmeijer-environment
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: target
      - name: image tagging
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/gcp-spring-boot-sample
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha
      - name: build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy-to-gcp:
    needs: [ release-docker-image ]
    runs-on: ubuntu-latest
    environment: oskar-westmeijer-environment
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: get commit sha
        id: commitsha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_INFRA_SERVICE_ACCOUNT }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_service_image: ${{ secrets.DOCKER_USERNAME }}/gcp-spring-boot-sample:sha-${{ steps.commitsha.outputs.sha_short }}
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_INFRA_SERVICE_ACCOUNT }}